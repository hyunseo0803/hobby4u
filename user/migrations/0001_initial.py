# Generated by Django 4.2 on 2023-04-26 14:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('notification', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'admin',
                'db_table_comment': '관리자 정보 테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Apply',
            fields=[
                ('num', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'apply',
                'db_table_comment': '클래스 신청테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('info', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
                ('img', models.CharField(blank=True, db_column='Img', max_length=100, null=True)),
                ('theme', models.CharField(blank=True, max_length=100, null=True)),
                ('people', models.CharField(blank=True, max_length=100, null=True)),
                ('money', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('intro1_file', models.CharField(blank=True, max_length=100, null=True)),
                ('intro1_content', models.CharField(blank=True, max_length=100, null=True)),
                ('intro2_file', models.CharField(blank=True, max_length=100, null=True)),
                ('intro2_content', models.CharField(blank=True, max_length=100, null=True)),
                ('intro3_file', models.CharField(blank=True, max_length=100, null=True)),
                ('intro3_content', models.CharField(blank=True, max_length=100, null=True)),
                ('applystart', models.CharField(blank=True, max_length=100, null=True)),
                ('applyend', models.CharField(blank=True, max_length=100, null=True)),
                ('activitystart', models.CharField(blank=True, max_length=100, null=True)),
                ('activityend', models.CharField(blank=True, max_length=100, null=True)),
                ('adress', models.CharField(blank=True, max_length=100, null=True)),
                ('uploadtime', models.CharField(blank=True, max_length=100, null=True)),
                ('goodcount', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'class',
                'db_table_comment': '클래스 정보',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DayClassinfo',
            fields=[
                ('num', models.AutoField(primary_key=True, serialize=False)),
                ('sequence', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('info', models.CharField(blank=True, max_length=100, null=True)),
                ('prepare', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'day_classinfo',
                'db_table_comment': '클래스의 활동일 별 계획 정보 (대면 비대면 포함)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('class_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('result', models.CharField(blank=True, max_length=100, null=True)),
                ('coment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'exam',
                'db_table_comment': '클래스 심사 테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LikeClass',
            fields=[
                ('num', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'like_class',
                'db_table_comment': '클래스 찜하기 또는 좋아요 테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LikeUser',
            fields=[
                ('num', models.AutoField(primary_key=True, serialize=False)),
                ('push_user', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'like_user',
                'db_table_comment': '멘토에게 좋아요 또는 찜하기 테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('provider', models.CharField(blank=True, max_length=100, null=True)),
                ('info', models.CharField(blank=True, max_length=100, null=True)),
                ('profileimg', models.CharField(blank=True, db_column='profileImg', max_length=100, null=True)),
                ('goodcount', models.CharField(blank=True, db_column='goodCount', max_length=100, null=True)),
                ('joindate', models.CharField(db_column='joinDate', max_length=100)),
            ],
            options={
                'db_table': 'member',
                'db_table_comment': '일반회원 및 블랙회원 테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OnlineClass',
            fields=[
                ('num', models.AutoField(primary_key=True, serialize=False)),
                ('daynum', models.CharField(blank=True, db_column='dayNum', max_length=100, null=True)),
                ('file', models.CharField(blank=True, max_length=100, null=True)),
                ('coment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'online_class',
                'db_table_comment': '온라인 클래스 수업 업로드 하는곳.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('num', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'performance',
                'db_table_comment': '회원별 성과물 테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('num', models.AutoField(primary_key=True, serialize=False)),
                ('coment', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'review',
                'db_table_comment': '리뷰테이블',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Blackmember',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='post.member')),
                ('period', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
                ('coment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'blackmember',
                'db_table_comment': '블랙 회원 정지 기간 및 사유',
                'managed': False,
            },
        ),
    ]
